name: Test, Release and Deploy to Heroku

on:
  push:
    branches:
      - main  # Adjust if deploying from a different branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'  # Adjust if needed

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install commitizen
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Unit Tests
        run: python -m unittest discover -v -s ./src/tests -p "test_*.py"

  release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write # Add this line to grant write permissions for creating releases
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # a full history is required for commitizen

      - name: Get the version
        id: get_version
        run: echo "version=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        id: changelog
        run: |
          pip install commitizen
          CURRENT_TAG=${{ steps.get_version.outputs.version }}
          # Get the previous tag, or the first commit if no previous tag exists
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${CURRENT_TAG}^ 2>/dev/null || git rev-list --max-parents=0 HEAD)
          echo "changelog=$(cz changelog --dry-run --start-rev $PREVIOUS_TAG --end-rev $CURRENT_TAG)" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - uses: akhileshns/heroku-deploy@v3.14.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}} 
          heroku_app_name: "nms-optimizer-service" #Must be unique in Heroku
          heroku_email: "john.belew@gmail.com"
