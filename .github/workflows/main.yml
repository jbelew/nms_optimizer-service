name: Test, Release and Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install commitizen
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Unit Tests
        run: python -m unittest discover -v -s ./src/tests -p "test_*.py"

  release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Commitizen
        run: python -m pip install --upgrade pip commitizen

      - name: Bump Version Automatically
        id: bump_version
        run: |
          # Bump version according to commits
          cz bump --yes
          # Get new tag
          NEW_TAG=$(git describe --tags --abbrev=0)
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        id: changelog
        run: |
          cz changelog --yes
          # Output changelog for GitHub release
          CHANGELOG_BODY=$(tail -n +1 CHANGELOG.md)
          echo "changelog=$CHANGELOG_BODY" >> $GITHUB_OUTPUT

      - name: Push Changes and Tag
        run: |
          git push origin main --follow-tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          release_name: Release ${{ steps.bump_version.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.14.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "nms-optimizer-service"
          heroku_email: "john.belew@gmail.com"
